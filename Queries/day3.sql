
SELECT EMPLOYEES.FIRST_NAME
FROM EMPLOYEES;

SELECT BLA.FIRST_NAME
FROM EMPLOYEES BLA;


------ SQL JOIN ------
--- IS USED TO GET DATA FROM 2 OR MORE TABLES THAT RELATED TO EACH OTEHR
-- PRIMARY KEY AND FOREIGN KEY RELATIONSHIP

--- INNER JOIN , LEFT OUTER JOIN , RIGHT OUTER JOIN , FULL OUTER JOIN

-- IN ORDER TO JOIN TWO TABLES THAT HAS RELATIONSHIP
-- SELECT DESIRED COLUMNS FROM BOTH TABLES
-- FROM TABLE 1
-- INNER JOIN TABLE 2 ON THE COMMON COLUMN


SELECT COUNTRIES.COUNTRY_NAME , REGIONS.REGION_NAME
FROM COUNTRIES
         INNER JOIN REGIONS ON COUNTRIES.REGION_ID = REGIONS.REGION_ID ;

-- we can use alias for table to make above query slightly more readable
-- nicknames are followed by space and the letter or word
-- you can use nickname to select the columns
-- just like you did in java obj.VariableName
SELECT c.COUNTRY_NAME , r.REGION_NAME
FROM COUNTRIES c
         INNER JOIN REGIONS r ON c.REGION_ID = r.REGION_ID ;



--- FIND OUT CITY (LOCATIONS) AND COUNTRY_NAME(COUNTRIES)
SELECT LOCATIONS.CITY, COUNTRIES.COUNTRY_NAME
FROM LOCATIONS
         INNER JOIN COUNTRIES ON LOCATIONS.COUNTRY_ID = COUNTRIES.COUNTRY_ID ;
;

SELECT l.CITY, c.COUNTRY_NAME
FROM LOCATIONS l
         INNER JOIN COUNTRIES c ON l.COUNTRY_ID = c.COUNTRY_ID ;
;
-- IT DOES NOT MATTER WHICH TABLE COMES FIRST
-- WHEN YOU DO INNER JOIN
SELECT l.CITY, c.COUNTRY_NAME
FROM COUNTRIES c
         INNER JOIN LOCATIONS l ON l.COUNTRY_ID = c.COUNTRY_ID ;
;

-- DISPLAY DEPARTMENT_NAME (DEPARTMENTS) AND CITY(LOCATIONS)
--

SELECT DEPARTMENTS.DEPARTMENT_NAME, LOCATIONS.CITY
FROM DEPARTMENTS
         INNER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID ;


SELECT d.DEPARTMENT_NAME, l.CITY
FROM DEPARTMENTS d
         INNER JOIN LOCATIONS l ON d.LOCATION_ID = l.LOCATION_ID ;

--- DISPLAY FIRST_NAME (EMPLOYEES) , DEPARTMENT_NAME(DEPARTMENTS)
-- THEY ARE RELATED BY DEPARTMENT_ID

SELECT EMPLOYEES.FIRST_NAME, DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
         INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID ;

--- INNER JOIN WILL RETURN THE DATA THAT MATCH FROM BOTH TABLE
--- IT'S RETURNING ONLY ROWS THAT HAS MATCHING DEPARTMENT_ID FROM BOTH TABLE
--- ANYTHING ELSE IS EXCLUDED
--- FOR EXAMPLE : KIMBERLY WITH NO DEPARTMENT ID
---               DEPARTMENTS WITH NO EMPLOYEES (MEANING NONE OF THE EMPLOYEES HAS THOSE DEPARTMENT_ID)
-- 106
SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
INNER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID ;

-- WE WANT TO DISPLAY FIRST_NAME, DEPARTMENT_NAME
--- INCLUDING THOSE THAT DOES NOT HAVE MATCHING DEPARTMENT_ID
--- LIKE KIMBERLY HAS NULL DEPARTMENT ID BUT WE STILL WANT TO GET THAT DATA
--- 106
SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
         LEFT OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID ;

--- -- WE WANT TO DISPLAY FIRST_NAME, DEPARTMENT_NAME
--- INCLUDING THOSE DEPARTMENTS THAT DOES NOT HAVE ANY MATCHING EMPLOYEES
--- 122
SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
         RIGHT OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID ;

--- -- WE WANT TO DISPLAY FIRST_NAME, DEPARTMENT_NAME
--- INCLUDING THOSE THAT DOES NOT HAVE MATCHING DEPARTMENT_ID
--- INCLUDING THOSE DEPARTMENTS THAT DOES NOT HAVE ANY MATCHING EMPLOYEES
--- 123
SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
         FULL OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID ;

---  DISPLAY ALL DEPARTMENT_NAME (DEPARTMENTS) AND CITY(LOCATIONS)
--- INCLUDING THOSE CITY WITH NO DEPARTMENT IN IT
-- 43
SELECT d.DEPARTMENT_NAME , l.CITY
FROM DEPARTMENTS d
         RIGHT OUTER JOIN LOCATIONS l ON d.LOCATION_ID = l.LOCATION_ID ;


----DISPLAY FIRST_NAME AND JOB_TITLE
SELECT e.FIRST_NAME,j.JOB_TITLE
FROM EMPLOYEES e
INNER JOIN JOBS j on e.JOB_ID = j.JOB_ID;


----DISPLAY FIRST_NAME (EMPLOYEES)
     -- AND JOB_TITLE (JOBS),
     -- DEPARTMENT_NAME (DEPARTMENTS)

SELECT e.FIRST_NAME,j.JOB_TITLE, d.DEPARTMENT_NAME
FROM EMPLOYEES e
INNER JOIN JOBS J on e.JOB_ID = J.JOB_ID
INNER JOIN DEPARTMENTS d on e.DEPARTMENT_ID = d.DEPARTMENT_ID;

--- THIS IS THE NO ALIAS VERSION OF SAME QUERY
SELECT  EMPLOYEES.FIRST_NAME,
        JOBS.JOB_TITLE,
        DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
         INNER JOIN JOBS        ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
         INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID ;

----DISPLAY CITY (LOCATION), COUNTRY_NAME (COUNTRIES), REGION_NAME( REGIONS)
SELECT l.CITY, c.COUNTRY_NAME, r.REGION_NAME
FROM LOCATIONS l
INNER JOIN COUNTRIES c ON l.COUNTRY_ID = c.COUNTRY_ID
INNER JOIN REGIONS r ON c.REGION_ID = r.REGION_ID;



----- SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
SELECT d.DEPARTMENT_NAME , COUNT(e.FIRST_NAME)
FROM EMPLOYEES e
         INNER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
GROUP BY d.DEPARTMENT_NAME ;
