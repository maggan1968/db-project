
---------SUB QUERY : QUERY INSIDE ANOTHER QUERY------

--5 QUERY: MAX, MIN, SUM, AVG, COUNT

--FIND OUT MAX SALARY FROM EMPLOYEES
SELECT MAX(SALARY)
FROM EMPLOYEES;

SELECT FIRST_NAME
FROM EMPLOYEES
WHERE SALARY = 24000;

-- WE HARD CODED THE VALUE OF 24000 WE GOT FROM FIST QUERY INTO SECOND QUERY
-- NOW JUST LIKE FUNCTION CALL WE CAN USE THIS QUERY
-- AS A BLOCK OF QUERY THAT GENERATE MAX SALARY ANYTIME
-- SO EVEN IF MAX SALARY CHANGE AT SOME POINT WE WOULD GET CORRECT RESULT
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE SALARY =(SELECT MAX(SALARY) FROM EMPLOYEES);

--FIND OUT THE NAME OF THE EMPLOYEE THAT MAKE LEAST SALARY
SELECT FIRST_NAME,SALARY
FROM EMPLOYEES
WHERE SALARY = (SELECT MIN(SALARY) FROM EMPLOYEES);


--FIND OUT THE NAME OF THE EMPLOYEE THAT MAKE MORE THAN AVERAGE SALARY
SELECT AVG(SALARY)
FROM EMPLOYEES;

SELECT FIRST_NAME,SALARY
FROM EMPLOYEES
WHERE SALARY >(SELECT AVG(SALARY)
               FROM EMPLOYEES);


--DISPLAY ALL EMPLOYEES IF SALARY IS NOT 2400

SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY!= 24000;

--AND FIND MAX SALARY
SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE SALARY!= 24000;

--AND FIND SECOND MAX SALARY
SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE SALARY!= (SELECT MAX(SALARY)FROM EMPLOYEES);

--- WHAT ABOUT 3TD MAX SALARY?
SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE SALARY < 17000;--FILTER ALL SALARY LESS THAN 2ND MAX

SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE SALARY <(SELECT MAX(SALARY)
               FROM EMPLOYEES
               WHERE SALARY!= (SELECT MAX(SALARY)FROM EMPLOYEES));


--FIND OUT THE FIRST_NAME OF EMPLOYEES WHO WORKS IN Executive Department

--find out the Department_id fo executive
SELECT DEPARTMENT_ID
FROM DEPARTMENTS
WHERE DEPARTMENT_NAME = 'Executive';

SELECT FIRST_NAME
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90;

-- NOW COMBINE THEM
SELECT FIRST_NAME, DEPARTMENT_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID
                       FROM DEPARTMENTS
                       WHERE DEPARTMENT_NAME = 'Executive');



-- FIND OUT THE DEPARTMENT_ID OF  Executive
-- AND Administration Department
SELECT DEPARTMENT_ID FROM DEPARTMENTS
WHERE DEPARTMENT_NAME IN ('Executive', 'Administration')
;
--- FIND OUT THE FIRST_NAME OF EMPLOYEES
-- WHO WORKS IN department_id 90 and 10
SELECT FIRST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (10,90) ;

-- COMBINE THE RESULT

SELECT FIRST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID IN ( SELECT DEPARTMENT_ID FROM DEPARTMENTS
                         WHERE DEPARTMENT_NAME IN ('Executive', 'Administration')  ) ;



---RESULT OF SUB QUERY CAN ALSO BE USED AS ENTIRE TABLE
--FOR EXAMPLE *FROM (SUB QUERY GOES HERE)
SELECT FIRST_NAME, LAST_NAME, FIRST_NAME || LAST_NAME AS FULL_NAME
FROM EMPLOYEES;
---WHERE FULL_NAME = 'EllenAbel' we can not use alias in condition

SELECT *
FROM (SELECT FIRST_NAME, LAST_NAME, FIRST_NAME  || LAST_NAME AS FULL_NAME
      FROM EMPLOYEES)
WHERE FULL_NAME = 'EllenAbel';

--FIND OUT THE EMPLOYEE COUNT OF THE DEPARTMENT WITH MOST EMPLOYEE COUNT
SELECT DEPARTMENT_ID,COUNT(*) AS EMPLOYEE_COUNT
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

--FIND OUT THE EMPLOYEE COUNT OF THE DEPARTMENT WITH MOST EMPLOYEE COUNT
SELECT MAX(EMPLOYEE_COUNT)
FROM (SELECT DEPARTMENT_ID,COUNT(*) AS EMPLOYEE_COUNT
      FROM EMPLOYEES
      GROUP BY DEPARTMENT_ID);

----- DENSE_RANK FUNCTION THAT FALL INTO CATEGORY OF ANALYTICAL FUNCTIONS
--DENSE_RANK () OVER (ORDER BY SALARY)
SELECT FIRST_NAME,SALARY,
       DENSE_RANK() over (ORDER BY SALARY DESC)AS SALARY_RANK
FROM EMPLOYEES;


















